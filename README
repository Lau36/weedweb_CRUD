<h1 class="code-line" data-line-start=0 data-line-end=1 ><a id="WeedWebCRUD_0"></a>WeedWebCRUD</h1>
<h2 class="code-line" data-line-start=2 data-line-end=3 ><a id="Pasos_para_correr_la_aplicacin_2"></a>Pasos para correr la aplicación</h2>
<ol>
<li class="has-line-data" data-line-start="4" data-line-end="9">
<p class="has-line-data" data-line-start="4" data-line-end="5">Clonar el repositorio:</p>
<pre><code class="has-line-data" data-line-start="6" data-line-end="8" class="language-bash">git <span class="hljs-built_in">clone</span> https://github.com/Lau36/weedweb_CRUD.git
</code></pre>
</li>
<li class="has-line-data" data-line-start="9" data-line-end="14">
<p class="has-line-data" data-line-start="9" data-line-end="10">Cambiarse a la rama development:</p>
<pre><code class="has-line-data" data-line-start="11" data-line-end="13" class="language-bash">git checkout development
</code></pre>
</li>
<li class="has-line-data" data-line-start="14" data-line-end="19">
<p class="has-line-data" data-line-start="14" data-line-end="15">Crear una base de datos con el nombre y las credenciales deseadas, preferiblemente desde la shell de sql:</p>
<pre><code class="has-line-data" data-line-start="16" data-line-end="18" class="language-sql"><span class="hljs-operator"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">DATABASE</span> weedweb_CRUD;</span>
</code></pre>
</li>
<li class="has-line-data" data-line-start="19" data-line-end="30">
<p class="has-line-data" data-line-start="19" data-line-end="20">En la raíz del proyecto (a la altura de este README), crear un archivo <code>.env</code> con las siguientes variables, reemplazando donde sea necesario:</p>
<pre><code class="has-line-data" data-line-start="21" data-line-end="29" class="language-dotenv">JWT_SECRET=&lt;Número de 8 dígitos&gt;
JWT_SECRET_REFRESH=&lt;Número de 4 dígitos&gt;
DB_NAME=&lt;nombre de la base de datos creada&gt;
DB_PASSWORD=&lt;contraseña de postgres&gt;
DB_HOST=&lt;Host de su base de datos&gt;
DB_USER=&lt;Usuario de la base de datos&gt;
PORT=&lt;Puerto en el que correrá la aplicación&gt;
</code></pre>
</li>
<li class="has-line-data" data-line-start="30" data-line-end="36">
<p class="has-line-data" data-line-start="30" data-line-end="31">Instalar dependencias y ejecutar la aplicación:</p>
<pre><code class="has-line-data" data-line-start="32" data-line-end="35" class="language-bash">npm install
npm run dev
</code></pre>
</li>
<li class="has-line-data" data-line-start="36" data-line-end="47">
<p class="has-line-data" data-line-start="36" data-line-end="37">Para probar los endpoints, se recomienda usar Postman o Insomnia:</p>
<ul>
<li class="has-line-data" data-line-start="38" data-line-end="39">Crear persona: <code>http://localhost:4000/users/api/person</code></li>
<li class="has-line-data" data-line-start="39" data-line-end="40">Crear empresa: <code>http://localhost:4000/users/api/company</code></li>
<li class="has-line-data" data-line-start="40" data-line-end="41">Logearse: <code>http://localhost:4000/users/api/SignIn</code></li>
<li class="has-line-data" data-line-start="41" data-line-end="42">Refrescar token: <code>http://localhost:4000/users/api/tokenRefresh</code></li>
<li class="has-line-data" data-line-start="42" data-line-end="43">Cerrar sesión: <code>http://localhost:4000/users/api/logout</code></li>
<li class="has-line-data" data-line-start="43" data-line-end="44">Actualizar persona por ID: <code>http://localhost:4000/users/api/user/id</code></li>
<li class="has-line-data" data-line-start="44" data-line-end="45">Actualizar empresa por ID: <code>http://localhost:4000/users/api/company/id</code></li>
<li class="has-line-data" data-line-start="45" data-line-end="47">Info de usuario por ID: <code>http://localhost:4000/users/api/id</code></li>
</ul>
</li>
</ol>
<h3 class="code-line" data-line-start=47 data-line-end=48 ><a id="Notas_adicionales_para_algunos_endpoints_47"></a>Notas adicionales para algunos endpoints:</h3>
<ul>
<li class="has-line-data" data-line-start="49" data-line-end="53">
<p class="has-line-data" data-line-start="49" data-line-end="50">Para los endpoints de actualizar usuarios y de ver info de usuario por ID, es necesario enviar el token de acceso en los headers:</p>
<ul>
<li class="has-line-data" data-line-start="50" data-line-end="51">En el header <code>token: &lt;El token de acceso generado en el login&gt;</code></li>
<li class="has-line-data" data-line-start="51" data-line-end="53"><code>Authorization: &lt;El token de acceso generado en el login&gt;</code>, recuerde que este token es de tipo bearer token</li>
</ul>
</li>
<li class="has-line-data" data-line-start="53" data-line-end="54">
<p class="has-line-data" data-line-start="53" data-line-end="54">Para el endpoint del token de refresco, es necesario pasar el token de refresco en los headers y no el de acceso.</p>
</li>
</ul>
